import java.text.DateFormat
import java.text.SimpleDateFormat

static def getDateTime() {
    DateFormat df = new SimpleDateFormat("dd MMMMM yyyy")
    return df.format(new Date()) + " Ð³."
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'koin'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    def appId = "com.isanechek.imagehandler"
    def fileNaming = "apk/ImageHandler"
    def versionNumber = 1
    def versionMajor = "0"
    def versionMinor = "0"
    def versionPatch = "1"
    def versionBuild = -1

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    ext.autoIncrementBuildNumber = {

        if (versionPropsFile.canRead()) {
            def versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps['DATE_BUILD'] = getDateTime()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new FileNotFoundException("Could not read version.properties!")
        }
    }


    def releaseStorePass = ""
    def releaseKeyAlias = ""
    def releaseKeyPass = ""
    def devStorePass = ""
    def devKeyAlias = ""
    def devKeyPass = ""

    def keyPropsFile = file('key.properties')
    if (keyPropsFile.canRead()) {
        def keyProps = new Properties()
        keyProps.load(new FileInputStream(keyPropsFile))
        releaseStorePass = keyProps['RELEASE_STORE_PASS'].toString()
        releaseKeyAlias = keyProps['RELEASE_KEY_ALIAS'].toString()
        releaseKeyPass = keyProps['RELEASE_KEY_PASS'].toString()
        devStorePass = keyProps['DEV_STORE_PASS'].toString()
        devKeyAlias = keyProps['DEV_KEY_ALIAS'].toString()
        devKeyPass = keyProps['DEV_KEY_PASS'].toString()
    } else {
        throw new FileNotFoundException("Could not read key.properties!")
    }


    defaultConfig {
        applicationId appId
        minSdkVersion 27
        targetSdkVersion 29
        versionCode versionNumber
        versionName "${versionMajor}.${versionMinor}.${versionPatch} (${versionBuild})"
        vectorDrawables.useSupportLibrary = true
        ndk {
            abiFilters 'armeabi-v7a'
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    aaptOptions {
        noCompress "tflite"
        noCompress "lite"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    signingConfigs {
        release {
            storeFile file('/home/isanechek/keys/isanechek_release.jks')
            storePassword releaseStorePass
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPass
        }

        dev {
            storeFile file('/home/isanechek/keys/isanechek_dev.jks')
            storePassword devStorePass
            keyAlias devKeyAlias
            keyPassword devKeyPass
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
        dev {
            applicationIdSuffix ".dev"
            debuggable true
            signingConfig signingConfigs.dev
        }
    }

    packagingOptions {
        exclude("META-INF/*.kotlin_module")
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${fileNaming}-${versionMajor}.${versionMinor}.${versionPatch}.apk"
        }
    }

    gradle.taskGraph.whenReady {taskGraph ->
        if (taskGraph.hasTask(assembleDebug)) {  /* when run debug task */
            autoIncrementBuildNumber()
        } else if (taskGraph.hasTask(assembleRelease)) { /* when run release task */
            autoIncrementBuildNumber()
        } else if (taskGraph.hasTask(assembleDev)) {
            autoIncrementBuildNumber()
        } else {
            println 'Hz task'
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    def coroutinesVersion = '1.3.7'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-core-ext:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-fragment:$koin_version"

    implementation 'androidx.core:core-ktx:1.4.0-alpha01'
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha01'

    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'

    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha03'
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0-rc01'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-rc01'

    implementation "androidx.viewpager2:viewpager2:1.1.0-alpha01"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta6'

    def fragmentVersion = '1.3.0-alpha05'
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"

    def lifecycleVersion = '2.3.0-alpha03'
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    implementation("io.coil-kt:coil:0.11.0")
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    implementation 'com.huangyz0918:androidwm-light:0.1.2'

    // Permissions
    def assentVersion = '3.0.0-RC4'
    implementation "com.afollestad.assent:core:$assentVersion"
    implementation "com.afollestad.assent:rationales:$assentVersion"
    implementation "com.afollestad.assent:coroutines:$assentVersion"

    def pagingVersion = "2.1.2"
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"

    def navigationVersion = '2.3.0-beta01'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    def roomVersion = '2.2.5'
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    def materialDialogVersion = "3.3.0"
    implementation "com.afollestad.material-dialogs:core:$materialDialogVersion"
    implementation "com.afollestad.material-dialogs:bottomsheets:$materialDialogVersion"
    implementation "com.afollestad.material-dialogs:lifecycle:$materialDialogVersion"
    implementation "com.afollestad.material-dialogs:files:$materialDialogVersion"

    def workVersion = "2.4.0-beta01"
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    implementation 'com.google.firebase:firebase-analytics:17.4.2'
    implementation 'com.google.firebase:firebase-ml-vision:24.0.3'
    implementation 'com.google.firebase:firebase-ml-vision-object-detection-model:19.0.5'
    implementation 'com.google.firebase:firebase-ml-vision-image-label-model:20.0.1'

    implementation 'com.github.the-super-toys.glimpse-android:glimpse-core:0.0.5'
    implementation 'com.github.the-super-toys.glimpse-android:glimpse-coil:0.0.5'
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "androidx.work:work-testing:$workVersion"

}